One common error when using the ArrayList class is sometimes you might try to retrieve an item that's at an invalid index. To avoid this, usually you'll add an if statement in order to check that the index is valid before retrieving the item from the list. However, sometimes those checks can get annoying and another developer might forget to do the check.
To provide a foolproof way of accessing items in a given list, we want to create a ModArrayList class with a getUsingMod method that takes in an index and retrieves an item from the list at that index. If the index is invalid, then the implementation should use the mod operation and mod the index based on the length of the list.
If the index is negative, then it should be made positive. If you're unfamiliar with mod, mod is similar to division. However, it returns the remainder rather than the quotient when given two numbers of the same sign as input, so either both positive or both negative.
This means if someone uses the method with index four and the list only has three items, the first item would be returned because four mod three equals one. That's the remainder of four divided by three.
The ModArrayList class should have all the functionality of an ArrayList with the additional functionality of the getUsingMod method. While you could write lots of code in the ModArrayList class to have it work the same as an ArrayList, I encourage you to use inheritance to avoid adding redundant code.
Good luck and have fun.